type Query {
  ping: String
  getUserByName(input: GetUserByNameInput!): User
  getSelfByName(input: GetSelfByNameInput!): User
}

type User {
  id: ID!
  name: String!
  slugName: String!
  email: String!
  image: String
  bio: String
  updatedAt: String
  createdAt: String
}

type Pagination {
  totalRecords: Int!
  currentLimit: Int!
  currentPage: Int!
  hasNextPage: Boolean!
}

enum ToastTypes {
  success
  info
  warning
  error
}

type Toast {
  text: String!
  type: ToastTypes!
}

input GetUserByNameInput {
  name: String!
}

input GetSelfByNameInput {
  name: String!
}
